service: ss2jira

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "ssm:GetParameter"
      Resource:
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/ss2jira/sstoken"
        - "arn:aws:ssm:#{AWS::Region}:#{AWS::AccountId}:parameter/ss2jira/jiratoken"
  stackTags:
    service: ss2jira
    deployuser: ${opt:deployuser}
    gitrepo: ${git:repository}
    giturl: ${opt:giturl}
    githash: ${git:sha1}
    gitmessage: ${git:message}
    gitbranch: ${git:branch}

custom:
  serverless-iam-roles-per-function:
    defaultInherit: true
  exportGitVariables: false
  #  githuborg: https://github.com/topcoder-platform/

functions:
  getSSFactors:
    handler: sscard.getSSFactors
    iamRoleStatements:
  getSSFactorTypes:
    handler: sscard.getSSFactors
  getSSMetadata:
    handler: sscard.getSSMetadata
  searchJiraExistingIssue:
    handler: jira.searchJiraExistingIssue
  updateJiraIssue:
    handler: jira.updateJiraIssue
  createJiraIssue:
    handler: jira.createJiraIssue
  transitionJiraIssue:
    handler: jira.transitionJiraIssue

stepFunctions:
  stateMachines:
    getSSFactors:
      ${file(includes/getSSFactors.yml)}
    getSSFactorTypes:
      ${file(includes/getSSFactorTypes.yml)}
    processSSIssues:
      ${file(includes/processSSIssues.yml)}
    createOrUpdateJiraIssue:
      ${file(includes/createOrUpdateJiraIssue.yml)}

plugins:
  - serverless-step-functions
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function
  - serverless-plugin-git-variables

    #resources:
    #Description: >
    #${self:service} ${git:branch}:${git:sha1}
    #https://github.com/jacob-meacham/serverless-plugin-git-variables
    #${git:message}
